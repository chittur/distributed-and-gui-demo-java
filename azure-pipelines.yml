trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - README.md
      - '*.md'

pr:
  branches:
    include:
      - main

pool: 'Self-Hosted'

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

jobs:
- job: BuildAndTest
  displayName: 'Build, Test, and Quality Checks'
  timeoutInMinutes: 30
  
  steps:
  - checkout: self
    clean: true
    
  - task: Cache@2
    displayName: 'Cache Maven dependencies'
    inputs:
      key: 'maven | "$(Agent.OS)" | **/pom.xml'
      restoreKeys: |
        maven | "$(Agent.OS)"
        maven
      path: $(MAVEN_CACHE_FOLDER)
      
  - task: JavaToolInstaller@0
    displayName: 'Set up JDK 17'
    inputs:
      versionSpec: '17'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
      
  - task: Maven@3
    displayName: 'Clean and Compile'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean compile'
      options: '-B'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      mavenVersionOption: 'Default'
      mavenOptions: '$(MAVEN_OPTS)'
      
  - task: Maven@3
    displayName: 'Run Checkstyle Code Style Checks'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'checkstyle:check'
      options: '-B'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      mavenVersionOption: 'Default'
      mavenOptions: '$(MAVEN_OPTS)'
      
  - task: Maven@3
    displayName: 'Run Tests with Coverage'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'test jacoco:report'
      options: '-B'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      testRunTitle: 'Unit Tests'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      mavenVersionOption: 'Default'
      mavenOptions: '$(MAVEN_OPTS)'
      
  - task: Maven@3
    displayName: 'Package Application'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'package -DskipTests'
      options: '-B'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      mavenVersionOption: 'Default'
      mavenOptions: '$(MAVEN_OPTS)'
      
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    condition: always()
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      testRunTitle: 'Unit Test Results'
      mergeTestResults: true
      failTaskOnFailedTests: true
      
  - task: PublishCodeCoverageResults@1
    displayName: 'Publish Code Coverage'
    condition: succeededOrFailed()
    inputs:
      codeCoverageTool: 'JaCoCo'
      summaryFileLocation: '**/jacoco.xml'
      reportDirectory: '**/site/jacoco'
      failIfCoverageEmpty: false
      
  - task: Maven@3
    displayName: 'Generate Checkstyle Report'
    condition: succeededOrFailed()
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'checkstyle:checkstyle'
      options: '-B'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      mavenVersionOption: 'Default'
      mavenOptions: '$(MAVEN_OPTS)'
      
  - task: CopyFiles@2
    displayName: 'Copy Build Artifacts'
    condition: succeeded()
    inputs:
      sourceFolder: 'target'
      contents: |
        *.jar
        site/**
      targetFolder: '$(Build.ArtifactStagingDirectory)'
      
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Build Artifacts'
    condition: succeeded()
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'java-build-artifacts'
      publishLocation: 'Container'
      
  - script: |
      echo "##[section]Build Summary"
      echo "âœ… Build completed successfully"
      echo "âœ… All tests passed"
      echo "âœ… Code coverage report generated"
      echo "âœ… Checkstyle validation passed"
      echo ""
      echo "ðŸ“Š Reports available in build artifacts:"
      echo "   - JaCoCo Coverage: target/site/jacoco/index.html"
      echo "   - Checkstyle Report: target/site/checkstyle.html"
      echo ""
      if [ -f "target/site/jacoco/jacoco.csv" ]; then
        echo "ðŸ“ˆ Coverage Summary:"
        head -n 5 target/site/jacoco/jacoco.csv | tail -n +2 | while IFS=',' read -r group package class missed_inst covered_inst missed_branch covered_branch missed_line covered_line; do
          if [ -n "$covered_line" ] && [ -n "$missed_line" ]; then
            total_lines=$((covered_line + missed_line))
            if [ $total_lines -gt 0 ]; then
              coverage=$((covered_line * 100 / total_lines))
              echo "   - $class: $coverage% line coverage ($covered_line/$total_lines lines)"
            fi
          fi
        done
      fi
    displayName: 'Display Build Summary'
    condition: always()
